name: CD
# The pipeline is triggered on:
#  - Repository Dispatch type of "model is registered"
on:
  push:
  repository_dispatch:
    branches: [ritter-class-deploy]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: k8scc01covidmlopsacr
  CLUSTER_NAME: k8s-cancentral-02-covid-aks
  CLUSTER_RESOURCE_GROUP: k8s-cancentral-01-covid-aks

jobs:
  deploy_to_qa:
    runs-on: ubuntu-latest
    steps:
    - name: Copy Repository Contents
      uses: actions/checkout@master

    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install Python dependencies
      run: |
        pip3 install requests --upgrade

    - name: Install Python dependencies
      run: |
        pip3 install adal --upgrade

    - name: Obtain JWT token
      env:
        KFP_PIPELINE_NAME: ${{ secrets.KFP_PIPELINE_NAME }}
        KFP_HOST: ${{ secrets.KFP_HOST }}
        RUN_ID: ${{ github.run_id }}
      run: |
        export JWT_TOKEN=$(python3 azure-token.py --tenant ${{ secrets.tenant }} \
                                                  --service_principal ${{ secrets.SERVICE_PRINCIPAL }} \
                                                  --sp_secret ${{ secrets.SERVICE_PRINCIPAL_PWD }} \
                                                  --sp_audience ${{ secrets.SERVICE_PRINCIPAL_AUDIENCE }})
        echo "::set-env name=JWT_TOKEN::$JWT_TOKEN"
      working-directory: pipeline

    - name: Download model
      run: |
        cd $GITHUB_WORKSPACE/containers/seldon-score
        mlflow_run_id=$(curl -H "Authorization: Bearer ${JWT_TOKEN}" -d '{"experiment_ids":['$MLFLOW_EXPERIMENT'],"filter":"tags.external_run_id='\'''$RUN_ID''\''"}' ${{ secrets.MLFLOW_URL }}/api/2.0/preview/mlflow/runs/search | jq -r '.runs[0].info.run_id')
        curl -H "Authorization: Bearer ${JWT_TOKEN}" -L '${{ secrets.MLFLOW_URL }}/api/get-artifact?path=model/data/model.h5&run_uuid='$mlflow_run_id > model.h5
        echo "::set-env name=mlflow_run_id::$mlflow_run_id"
      env:
        RUN_ID: ${{ steps.deh.outputs.RUN_ID }}
        MLFLOW_EXPERIMENT: ${{ secrets.MLFLOW_EXPERIMENT }}

    - name: Build Scoring image
      run: |
        cd $GITHUB_WORKSPACE/containers/seldon-score
        echo "debug outpout "
        echo "mlflow_run_id "$mlflow_run_id
        docker build $GITHUB_WORKSPACE/containers/seldon-score -t ${{ secrets.MODEL_IMAGE_NAME }}:$RUN_ID
        docker push ${{ secrets.MODEL_IMAGE_NAME }}:$RUN_ID
      env:
        RUN_ID: ${{ steps.deh.outputs.RUN_ID }}

    - name: Promote model to Staging
      run: |
        body=$(curl -H "Authorization: Bearer ${JWT_TOKEN}" ${{ secrets.MLFLOW_URL }}/api/2.0/preview/mlflow/model-versions/search?filter=run_id%3D%27${mlflow_run_id}%27 | jq '.model_versions[0] | {name: .name, version: .version, stage: $stage}' --arg stage Staging --compact-output)
        curl -H "Authorization: Bearer ${JWT_TOKEN}" -d $body ${{ secrets.MLFLOW_URL }}/api/2.0/preview/mlflow/model-versions/transition-stage

    - run: |
        mkdir -p /home/runner/work/_temp/_github_home/
        cp $KUBECONFIG /home/runner/work/_temp/_github_home/KUBECONFIG

    - name: Deploy Model to SeldonCore
      uses: 'statcan/actions/helm@master'
      env:
        KUBECONFIG: /github/home/KUBECONFIG
      with:
        release: 'seldon-score'
        namespace: 'serving'
        tillerNamespace: 'serving'
        chart: './containers/seldon-score/chart'
        token: '${{ github.token }}'
        values: |
          image:
            repository: "${{ secrets.SELDON_MODEL_IMAGE_NAME }}"
            tag: "${{ steps.deh.outputs.RUN_ID }}"
          imagePullSecrets:
            - name: k8scc01covidmlopsacr-registry-connection